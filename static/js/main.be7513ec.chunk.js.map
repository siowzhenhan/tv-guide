{"version":3,"sources":["reportWebVitals.js","components/channel/Card.js","components/filter/Search.js","components/channel/List.js","pages/Home.js","components/channel/Details.js","pages/Details.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ChannelCard","data","history","useHistory","useState","filtered","setFiltered","currentTime","Date","useEffect","filter","currentSchedule","obj","datetime","string","split","Number","toMinutes","duration","Header","style","display","alignItems","width","marginRight","src","imageUrl","backupImage","alt","title","stbNumber","whiteSpace","overflow","textOverflow","fontWeight","console","log","length","onClick","push","id","className","headStyle","fontSize","textAlign","moment","format","Search","handleNameSearchProps","nameSearch","setNameSearch","marginBottom","type","placeholder","value","onChange","e","target","name","ChannelList","map","d","Home","setData","axios","get","res","response","catch","err","error","text","filterByName","toLowerCase","includes","filterByNumber","TabPane","Tabs","ChannelDetails","details","setDetails","slug","useParams","allSchedules","key","schedule","isOnNow","allFilter","arr","Item","href","process","description","tab","s","eventId","uuidv4","DetailsPage","Details","App","basename","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be7513ec.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState, useEffect } from 'react'\nimport { Card } from 'antd'\nimport moment from 'moment'\nimport { useHistory } from 'react-router-dom'\n\nconst ChannelCard = ({ data }) => {\n  const history = useHistory()\n  const [filtered, setFiltered] = useState([])\n\n  // converts string duration to minutes (number)\n  const toMinutes = string => {\n    const split = string.split(':')\n    const sum = Number(split[0]) * 60 + Number(split[1]) + Number(split[2]) / 60\n    return sum\n  }\n\n  const currentTime = new Date()\n\n  // filter single data's schedule array when received (each mounted)\n  useEffect(() => {\n    const filter = data.currentSchedule.filter(obj => {\n      const diff = currentTime - new Date(obj.datetime)\n      return diff / 60000 < toMinutes(obj.duration)\n    })\n    setFiltered(filter)\n  }, [])\n\n  const Header = () => {\n    return (\n      <div style={{ display: 'flex', alignItems: 'center', width: '100%' }}>\n        {/* Image section (data.imageUrl) */}\n        <div style={{ marginRight: 20 }}>\n          <img\n            width='60'\n            src={data.imageUrl ? data.imageUrl : data.backupImage}\n            alt={data.title}\n          />\n        </div>\n        <div style={{ width: '100%' }}>\n          {/* Channel number (data.stbNumber) */}\n          <div>CH{data.stbNumber}</div>\n          {/* Channel name (data.title) */}\n          <div\n            style={{\n              width: '100%',\n              whiteSpace: 'nowrap',\n              overflow: 'hidden',\n              textOverflow: 'ellipsis',\n              fontWeight: 'bold'\n            }}\n          >\n            {data.title}\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  console.log('filtered schedule in card', filtered)\n  console.log('total filtered length', filtered.length)\n\n  const handleOnClick = () => {\n    history.push(`details/${data.id}`)\n  }\n\n  return (\n    <Card\n      onClick={handleOnClick}\n      title={<Header />}\n      className='channel-card'\n      headStyle={{ fontSize: '1em', textAlign: 'left' }}\n    >\n      <ul>\n        <li>\n          <span style={{ fontWeight: 'bold' }}>On Now</span>\n          <div\n            style={{\n              whiteSpace: 'nowrap',\n              overflow: 'hidden',\n              textOverflow: 'ellipsis'\n            }}\n          >\n            <strong>\n              {filtered[0] ? filtered[0].title : 'No Information Available'}\n            </strong>\n          </div>\n        </li>\n        <li>\n          <span>\n            {filtered[1]\n              ? moment(filtered[1].datetime).format('hh:mm A')\n              : 'N/A'}\n          </span>\n          <div\n            style={{\n              whiteSpace: 'nowrap',\n              overflow: 'hidden',\n              textOverflow: 'ellipsis'\n            }}\n          >\n            {filtered[1] ? filtered[1].title : 'No Information Available'}\n          </div>\n        </li>\n        <li>\n          <span>\n            {filtered[2]\n              ? moment(filtered[2].datetime).format('hh:mm A')\n              : 'N/A'}\n          </span>\n          <div\n            style={{\n              whiteSpace: 'nowrap',\n              overflow: 'hidden',\n              textOverflow: 'ellipsis'\n            }}\n          >\n            {filtered[2] ? filtered[2].title : 'No Information Available'}\n          </div>\n        </li>\n      </ul>\n    </Card>\n  )\n}\n\nexport default ChannelCard\n","import React, { useState } from 'react'\nimport { Input } from 'antd'\n\nconst Search = ({ handleNameSearchProps }) => {\n  const [nameSearch, setNameSearch] = useState('')\n\n  const onNameChange = e => {\n    setNameSearch(e.target.value)\n    handleNameSearchProps(e.target.value)\n  }\n\n  return (\n    <Input\n      style={{ marginBottom: 10 }}\n      className='search-input'\n      type='text'\n      placeholder='Search Channels'\n      value={nameSearch}\n      onChange={onNameChange}\n      name='name'\n    />\n  )\n}\n\nexport default Search\n","import React, { useState } from 'react'\n\nimport ChannelCard from './Card'\nimport Search from '../filter/Search'\n\nconst ChannelList = ({ data, handleNameSearchProps }) => {\n  const [nameSearch, setNameSearch] = useState('')\n\n  const onNameChange = e => {\n    setNameSearch(e.target.value)\n    handleNameSearchProps(e.target.value)\n  }\n\n  return (\n    <>\n      <Search handleNameSearchProps={handleNameSearchProps} />\n\n      <div className='wrapper-grid'>\n        {data.map(d => (\n          <ChannelCard key={d.id} data={d} />\n        ))}\n      </div>\n    </>\n  )\n}\n\nexport default ChannelList\n","import React, { useState, useEffect } from 'react'\nimport '../App.css'\nimport axios from 'axios'\n\nimport ChannelList from '../components/channel/List'\n\n// api\n// https://contenthub-api.eco.astro.com.my/channel/all.json\n// https://contenthub-api.eco.astro.com.my/channel/CHANNEL_ID.json\n\nconst Home = () => {\n  const [data, setData] = useState([])\n  const [filtered, setFiltered] = useState([])\n\n  const fetchChannels = () => {\n    return axios\n      .get('https://contenthub-api.eco.astro.com.my/channel/all.json')\n      .then(res => {\n        console.log(res.data.response)\n        setData(res.data.response)\n      })\n      .catch(err => console.error(err))\n  }\n\n  useEffect(() => {\n    fetchChannels()\n    setFiltered(data)\n  }, [])\n\n  const handleNameSearch = text => {\n    const filter = data.filter(d => {\n      const filterByName = d.title.toLowerCase().includes(text.toLowerCase())\n      const filterByNumber = d.stbNumber\n        .toLowerCase()\n        .includes(text.toLowerCase())\n\n      return filterByName || filterByNumber\n    })\n    setFiltered(filter)\n  }\n\n  return (\n    <div className='container'>\n      <h1>Channel List</h1>\n\n      <ChannelList\n        handleNameSearchProps={handleNameSearch}\n        data={filtered.length ? filtered : data}\n      />\n    </div>\n  )\n}\n\nexport default Home\n","import React, { useState, useEffect } from 'react'\nimport { Breadcrumb, Tabs } from 'antd'\nimport axios from 'axios'\nimport { useParams } from 'react-router-dom'\nimport moment from 'moment'\nimport { v4 as uuidv4 } from 'uuid'\n\n// API (details)\n// https://contenthub-api.eco.astro.com.my/channel/CHANNEL_ID.json\n\nconst { TabPane } = Tabs\n\nconst ChannelDetails = () => {\n  const [details, setDetails] = useState([])\n\n  let { slug } = useParams()\n\n  const fetchDetails = id => {\n    return axios\n      .get(`https://contenthub-api.eco.astro.com.my/channel/${id}.json`)\n      .then(res => {\n        console.log(res.data.response)\n        setDetails(res.data.response)\n      })\n      .catch(err => console.error(err))\n  }\n\n  useEffect(() => {\n    fetchDetails(slug)\n  }, [])\n\n  let allSchedules = []\n\n  for (let key in details.schedule) {\n    allSchedules.push(details.schedule[key])\n  }\n\n  // converts string duration to minutes (number)\n  const toMinutes = string => {\n    const split = string.split(':')\n    const sum = Number(split[0]) * 60 + Number(split[1]) + Number(split[2]) / 60\n    return sum\n  }\n\n  const currentTime = new Date()\n\n  const isOnNow = obj => {\n    const diff = currentTime - new Date(obj.datetime)\n    if (\n      diff / 60000 < toMinutes(obj.duration) &&\n      new Date(obj.datetime) < currentTime\n    ) {\n      return true\n    }\n    return false\n  }\n\n  const allFilter = allSchedules.map(arr => {\n    const filter = arr.filter(obj => {\n      const diff = currentTime - new Date(obj.datetime)\n      return diff / 60000 < toMinutes(obj.duration)\n    })\n    return filter\n  })\n\n  return (\n    <div className='container'>\n      <h1>Channel Details Page</h1>\n      <Breadcrumb style={{ marginBottom: 30 }}>\n        <Breadcrumb.Item href={process.env.PUBLIC_URL}>Content</Breadcrumb.Item>\n        <Breadcrumb.Item>{details.title}</Breadcrumb.Item>\n      </Breadcrumb>\n\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          width: '100%',\n          marginBottom: 20\n        }}\n      >\n        {/* Image section (data.imageUrl) */}\n        <div style={{ marginRight: 20 }}>\n          <img width='60' src={details.imageUrl} alt={''} />\n        </div>\n        <div style={{ width: '100%' }}>\n          {/* Channel number (data.stbNumber) */}\n          <div>CH{details.stbNumber}</div>\n          {/* Channel name (data.title) */}\n          <div\n            style={{\n              width: '100%',\n              whiteSpace: 'nowrap',\n              overflow: 'hidden',\n              textOverflow: 'ellipsis',\n              fontWeight: 'bold'\n            }}\n          >\n            {details.title}\n          </div>\n        </div>\n      </div>\n\n      {/* Descriptions */}\n      <p>{details.description}</p>\n\n      {/* Tabs */}\n      <Tabs>\n        {allFilter.map(schedule => (\n          <TabPane\n            tab={\n              schedule.length > 0\n                ? moment(new Date()).format('dddd') ===\n                  moment(schedule[0].datetime).format('dddd')\n                  ? 'TODAY'\n                  : moment(schedule[0].datetime).format('dddd')\n                : 'N/A'\n            }\n            key={schedule.length > 0 ? schedule[0].datetime : uuidv4()}\n          >\n            <ul className='spaced'>\n              {schedule.map(s => (\n                <li key={s.eventId}>\n                  <span>\n                    {isOnNow(s) ? (\n                      <strong>On Now</strong>\n                    ) : (\n                      moment(s.datetime).format('hh:mm A')\n                    )}\n                  </span>\n                  <div\n                    style={{\n                      whiteSpace: 'nowrap',\n                      overflow: 'hidden',\n                      textOverflow: 'ellipsis'\n                    }}\n                  >\n                    {isOnNow(s) ? <strong>{s.title}</strong> : s.title}\n                  </div>\n                </li>\n              ))}\n            </ul>\n          </TabPane>\n        ))}\n      </Tabs>\n    </div>\n  )\n}\n\nexport default ChannelDetails\n","import React from 'react'\n\nimport Details from '../components/channel/Details'\n\nconst DetailsPage = () => {\n  return <Details />\n}\n\nexport default DetailsPage\n","import React from 'react'\nimport './App.css'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport Home from './pages/Home'\nimport DetailsPage from './pages/Details'\n\n// api\n// https://contenthub-api.eco.astro.com.my/channel/all.json\n// https://contenthub-api.eco.astro.com.my/channel/CHANNEL_ID.json\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Route exact path='/' component={Home} />\n        <Route path='/details/:slug' component={DetailsPage} />\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport reportWebVitals from './reportWebVitals'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}